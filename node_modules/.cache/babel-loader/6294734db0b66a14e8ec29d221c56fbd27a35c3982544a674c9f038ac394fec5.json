{"ast":null,"code":"import { createSelector as reselectCreateSelector } from 'reselect';\nimport { warnOnce } from '../internals/utils/warning';\nconst cache = new WeakMap();\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\nexport const createSelector = function (a, b, c, d, e, f) {\n  if ((arguments.length <= 6 ? 0 : arguments.length - 6) > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam !== null && instanceIdParam !== void 0 ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam !== null && instanceIdParam !== void 0 ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam !== null && instanceIdParam !== void 0 ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam !== null && instanceIdParam !== void 0 ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam !== null && instanceIdParam !== void 0 ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\nexport const createSelectorMemoized = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  const selector = (stateOrApiRef, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId !== null && instanceId !== void 0 ? instanceId : DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit !== null && cacheArgsInit !== void 0 ? cacheArgsInit : new Map();\n    const cacheFn = cacheArgs === null || cacheArgs === void 0 ? void 0 : cacheArgs.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};","map":{"version":3,"names":["createSelector","reselectCreateSelector","warnOnce","cache","WeakMap","checkIsAPIRef","value","current","DEFAULT_INSTANCE_ID","id","a","b","c","d","e","f","arguments","length","Error","selector","stateOrApiRef","instanceIdParam","isAPIRef","instanceId","state","va","vb","vc","vd","ve","acceptsApiRef","createSelectorMemoized","_len","args","Array","_key","cacheKey","process","env","NODE_ENV","cacheArgsInit","get","cacheArgs","Map","cacheFn","fn","set"],"sources":["E:/OneDrive - delaPlex/Project/BlueBerry/ChatGpt/21Aug24/Blueberry-bot/frontend/node_modules/@mui/x-data-grid/utils/createSelector.js"],"sourcesContent":["import { createSelector as reselectCreateSelector } from 'reselect';\nimport { warnOnce } from '../internals/utils/warning';\nconst cache = new WeakMap();\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\nexport const createSelector = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\nexport const createSelectorMemoized = (...args) => {\n  const selector = (stateOrApiRef, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}