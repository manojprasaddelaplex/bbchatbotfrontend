{"ast":null,"code":"var _jsxFileName = \"E:\\\\OneDrive - delaPlex\\\\Project\\\\BlueBerry\\\\ChatGpt\\\\21Aug24\\\\Blueberry-bot\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.scss';\nimport 'chart.js/auto';\nimport { Chart } from 'react-chartjs-2';\nimport HeadsetMicIcon from '@mui/icons-material/HeadsetMic';\nimport PersonIcon from '@mui/icons-material/Person';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\nimport SendIcon from '@mui/icons-material/Send';\nimport ExportData from './export/Export_data';\nimport axios from 'axios';\nimport { CHART_COLORS } from './assets/utils';\nimport { DataGrid } from '@mui/x-data-grid';\nimport Feedback from './feedback/Feedback';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuestion] = useState('');\n  const [userQuery, setUserQuery] = useState('');\n  const [messages, setMessages] = useState([{\n    text: 'Hello! How can I assist you today?',\n    sender: 'bot',\n    chart: {},\n    table: {}\n  }]);\n  const [loading, setLoading] = useState(false);\n  const [resID, setResID] = useState('');\n  const messagesContainerRef = useRef(null);\n  const scrollToBottom = () => {\n    if (messagesContainerRef.current) {\n      messagesContainerRef.current.scrollTop = messagesContainerRef.current.scrollHeight;\n    }\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const submitQuestion = async () => {\n    setUserQuery(query);\n    setQuestion('');\n    setLoading(true);\n    setResID('');\n    let botMessage = {\n      text: '',\n      sender: 'bot',\n      chart: {},\n      table: {}\n    };\n    const userMessage = {\n      text: query,\n      sender: 'user'\n    };\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/query', {\n        query\n      });\n      const data = await response.data.results;\n      const id = await response.data.id;\n      setResID(id);\n      setMessages([...messages, userMessage]);\n      switch (true) {\n        case query.toLowerCase().includes('text') || !query.toLowerCase().includes('text') && !['chart', 'graph', 'table'].some(term => query.toLowerCase().includes(term)):\n          botMessage.text = data.text;\n          break;\n        case query.toLowerCase().includes('chart'):\n          botMessage.text = 'Here is a chart you requested.';\n          botMessage.chart = {\n            type: 'doughnut',\n            data: {\n              labels: data.labels,\n              datasets: [{\n                label: 'Count',\n                data: data.data,\n                backgroundColor: Object.values(CHART_COLORS),\n                borderWidth: 1,\n                hoverOffset: 10\n              }]\n            },\n            options: {\n              responsive: true,\n              layout: {\n                padding: 10\n              }\n            }\n          };\n          break;\n        case query.toLowerCase().includes('graph'):\n          botMessage.text = 'Here is a graph you requested.';\n          botMessage.chart = {\n            type: 'bar',\n            data: {\n              labels: data.labels,\n              datasets: [{\n                label: 'Count',\n                data: data.data,\n                backgroundColor: Object.values(CHART_COLORS),\n                borderWidth: 1\n              }]\n            },\n            options: {\n              responsive: true\n            }\n          };\n          break;\n        case query.toLowerCase().includes('table'):\n          botMessage.text = 'Here is a table you requested.';\n          botMessage.table = {\n            headers: data.headers,\n            rows: data.rows\n          };\n          break;\n        default:\n          botMessage.text = data.text;\n      }\n    } catch (error) {\n      botMessage.text = \"Some error occurred!!\";\n    }\n    setMessages([...messages, userMessage, botMessage]);\n    setLoading(false);\n  };\n  const handleReset = () => {\n    setQuestion('');\n    setMessages([{\n      text: 'Hello! How can I assist you today?',\n      sender: 'bot'\n    }]);\n    setLoading(false);\n  };\n  const latestMessage = messages[messages.length - 1];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"sonar-logo.png\",\n            alt: \"Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-content\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Sonar ChatBot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      ref: messagesContainerRef,\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-wrapper\",\n          children: [message.sender === 'bot' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon-container\",\n            children: [/*#__PURE__*/_jsxDEV(HeadsetMicIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ExportData, {\n              user_query: userQuery,\n              message: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${message.sender}-container`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${message.sender}`,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this), message.chart && Object.keys(message.chart).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chatbot-chart-style\",\n                children: /*#__PURE__*/_jsxDEV(Chart, {\n                  type: message.chart.type,\n                  data: message.chart.data,\n                  options: message.chart.options\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this), message.table && message.table.headers && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chatbot-table-style\",\n                children: /*#__PURE__*/_jsxDEV(DataGrid, {\n                  rows: message.table.rows.map((row, rowIndex) => ({\n                    id: rowIndex + 1,\n                    // Generate a unique ID for each row\n                    ...row.reduce((acc, cell, cellIndex) => {\n                      acc[message.table.headers[cellIndex]] = cell;\n                      return acc;\n                    }, {})\n                  })),\n                  columns: message.table.headers.map(header => ({\n                    field: header,\n                    headerName: header,\n                    width: 100,\n                    headerClassName: 'table-header'\n                  })),\n                  initialState: {\n                    pagination: {\n                      paginationModel: {\n                        pageSize: 5\n                      }\n                    }\n                  },\n                  pageSizeOptions: [5]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), message.sender === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon-container-user\",\n            children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this), message.sender === 'bot' && !loading && latestMessage === message && /*#__PURE__*/_jsxDEV(Feedback, {\n            id: resID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bot-loading\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon-container\",\n            children: /*#__PURE__*/_jsxDEV(HeadsetMicIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-message bot\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"padding-snippet\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"snippet\",\n                \"data-title\": \"dot-elastic\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stage\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dot-elastic\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Please enter your topic and details for the chart\",\n        value: query,\n        onChange: e => setQuestion(e.target.value),\n        className: \"input-field\",\n        onKeyPress: e => e.key === 'Enter' && submitQuestion()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        disabled: loading,\n        className: `send-button chat-reset-button ${loading ? 'disabled' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(RestartAltIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitQuestion,\n        disabled: loading || !query,\n        className: `send-button ${loading || !query ? 'disabled' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ln1fIG9Uxa8Apz05EiMf3ldFm9k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Chart","HeadsetMicIcon","PersonIcon","RestartAltIcon","SendIcon","ExportData","axios","CHART_COLORS","DataGrid","Feedback","jsxDEV","_jsxDEV","App","_s","query","setQuestion","userQuery","setUserQuery","messages","setMessages","text","sender","chart","table","loading","setLoading","resID","setResID","messagesContainerRef","scrollToBottom","current","scrollTop","scrollHeight","submitQuestion","botMessage","userMessage","response","post","data","results","id","toLowerCase","includes","some","term","type","labels","datasets","label","backgroundColor","Object","values","borderWidth","hoverOffset","options","responsive","layout","padding","headers","rows","error","handleReset","latestMessage","length","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","message","index","user_query","keys","row","rowIndex","reduce","acc","cell","cellIndex","columns","header","field","headerName","width","headerClassName","initialState","pagination","paginationModel","pageSize","pageSizeOptions","placeholder","value","onChange","e","target","onKeyPress","key","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/OneDrive - delaPlex/Project/BlueBerry/ChatGpt/21Aug24/Blueberry-bot/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.scss';\nimport 'chart.js/auto';\nimport { Chart } from 'react-chartjs-2';\nimport HeadsetMicIcon from '@mui/icons-material/HeadsetMic';\nimport PersonIcon from '@mui/icons-material/Person';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\nimport SendIcon from '@mui/icons-material/Send';\nimport ExportData from './export/Export_data';\nimport axios from 'axios';\nimport { CHART_COLORS } from './assets/utils';\nimport { DataGrid } from '@mui/x-data-grid';\nimport Feedback from './feedback/Feedback';\n\n\nfunction App() {\n  const [query, setQuestion] = useState<string>('');\n  const [userQuery, setUserQuery] = useState<string>('');\n  const [messages, setMessages] = useState<any>([{ text: 'Hello! How can I assist you today?', sender: 'bot', chart: {}, table: {} }]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [resID, setResID] = useState('');\n\n\n  const messagesContainerRef = useRef<any>(null);\n  const scrollToBottom = () => {\n    if (messagesContainerRef.current) {\n      messagesContainerRef.current.scrollTop = messagesContainerRef.current.scrollHeight;\n    }\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const submitQuestion = async () => {\n    setUserQuery(query);\n    setQuestion('');\n    setLoading(true);\n    setResID('');\n    let botMessage: any = { text: '', sender: 'bot', chart: {}, table: {} };\n    const userMessage = { text: query, sender: 'user' };\n\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/query', { query });\n      const data = await response.data.results;\n      const id = await response.data.id\n      setResID(id)\n\n      setMessages([...messages, userMessage]);\n\n      switch (true) {\n        case query.toLowerCase().includes('text') ||\n          (!query.toLowerCase().includes('text') &&\n            !['chart', 'graph', 'table'].some(term => query.toLowerCase().includes(term))):\n          botMessage.text = data.text;\n          break;\n        case query.toLowerCase().includes('chart'):\n          botMessage.text = 'Here is a chart you requested.';\n          botMessage.chart = {\n            type: 'doughnut',\n            data: {\n              labels: data.labels,\n              datasets: [\n                {\n                  label: 'Count',\n                  data: data.data,\n                  backgroundColor: Object.values(CHART_COLORS),\n                  borderWidth: 1,\n                  hoverOffset: 10\n                },\n              ],\n            },\n            options: {\n              responsive: true,\n              layout: {\n                padding: 10\n              }\n            },\n          };\n          break;\n        case query.toLowerCase().includes('graph'):\n          botMessage.text = 'Here is a graph you requested.';\n          botMessage.chart = {\n            type: 'bar',\n            data: {\n              labels: data.labels,\n              datasets: [\n                {\n                  label: 'Count',\n                  data: data.data,\n                  backgroundColor: Object.values(CHART_COLORS),\n                  borderWidth: 1,\n                },\n              ],\n            },\n            options: {\n              responsive: true,\n            },\n          };\n          break;\n        case query.toLowerCase().includes('table'):\n          botMessage.text = 'Here is a table you requested.';\n          botMessage.table = {\n            headers: data.headers,\n            rows: data.rows\n          };\n          break;\n        default:\n          botMessage.text = data.text;\n      }\n    } catch (error: any) {\n      botMessage.text = \"Some error occurred!!\";\n    }\n\n    setMessages([...messages, userMessage, botMessage]);\n    setLoading(false);\n  };\n\n  const handleReset = () => {\n    setQuestion('');\n    setMessages([{ text: 'Hello! How can I assist you today?', sender: 'bot' }]);\n    setLoading(false);\n  };\n\n  const latestMessage = messages[messages.length - 1];\n\n  return (\n    <div className=\"chatbot-interface\">\n      <div className='chatbot-header'>\n        <div className='flex-area'>\n          <div className=\"icon-container\">\n            <img src=\"sonar-logo.png\" alt=\"Logo\" />\n          </div>\n          <div className='right-content'>\n            {/* <h1>ChatBot for Custody Portal</h1> */}\n            <p>Sonar ChatBot</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"messages-container\" ref={messagesContainerRef}>\n        {messages.map((message: any, index: number) => (\n          <div key={index}>\n            <div className='message-wrapper'>\n              {message.sender === 'bot' && (\n                <div className=\"icon-container\">\n                  <HeadsetMicIcon />\n                  <ExportData user_query={userQuery} message={message} />\n                </div>\n              )}\n              <div className={`${message.sender}-container`}>\n                <div className={`message ${message.sender}`}>\n                  <p>{message.text}</p>\n                  {message.chart && Object.keys(message.chart).length > 0 && (\n                    <div className='chatbot-chart-style' key={index}>\n                      <Chart type={message.chart.type} data={message.chart.data} options={message.chart.options} />\n                    </div>\n                  )}\n                  {message.table && message.table.headers && (\n                    <div className='chatbot-table-style' key={index}>\n                      <DataGrid\n                        rows={message.table.rows.map((row: any, rowIndex: any) => ({\n                          id: rowIndex + 1, // Generate a unique ID for each row\n                          ...row.reduce((acc: any, cell: any, cellIndex: any) => {\n                            acc[message.table.headers[cellIndex]] = cell;\n                            return acc;\n                          }, {}),\n                        }))}\n                        columns={message.table.headers.map((header: any) => ({\n                          field: header,\n                          headerName: header,\n                          width: 100,\n                          headerClassName: 'table-header'\n                        }))}\n                        initialState={{\n                          pagination: {\n                            paginationModel: {\n                              pageSize: 5,\n                            },\n                          },\n                        }}\n                        pageSizeOptions={[5]}\n                      />\n                    </div>\n                  )}\n                </div>\n\n              </div>\n              {message.sender === 'user' && (\n                <div className=\"icon-container-user\">\n                  <PersonIcon />\n                </div>\n              )}\n              {message.sender === 'bot' && !loading && latestMessage === message && (\n                <Feedback\n                  id={resID}\n                />\n              )}\n            </div>\n\n          </div>\n\n        ))}\n\n        {loading && (\n          <div className='bot-loading'>\n            <div className='message-wrapper'>\n              <div className=\"icon-container\">\n                <HeadsetMicIcon />\n              </div>\n              <div className='loading-message bot'>\n                <div className='padding-snippet'>\n                  <div className=\"snippet\" data-title=\"dot-elastic\">\n                    <div className=\"stage\">\n                      <div className=\"dot-elastic\"></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n      </div>\n      <div className=\"input-area\">\n        <input\n          type=\"text\"\n          placeholder=\"Please enter your topic and details for the chart\"\n          value={query}\n          onChange={(e) => setQuestion(e.target.value)}\n          className=\"input-field\"\n          onKeyPress={(e) => e.key === 'Enter' && submitQuestion()}\n        />\n        <button onClick={handleReset} disabled={loading} className={`send-button chat-reset-button ${loading ? 'disabled' : ''}`}>\n          <RestartAltIcon />\n        </button>\n\n        <button onClick={submitQuestion} disabled={loading || !query} className={`send-button ${loading || !query ? 'disabled' : ''}`}>\n          <SendIcon />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}