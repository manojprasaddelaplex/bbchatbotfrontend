{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from './gridPaginationUtils';\nimport { useGridPaginationModel } from './useGridPaginationModel';\nimport { useGridRowCount } from './useGridRowCount';\nimport { useGridPaginationMeta } from './useGridPaginationMeta';\nexport const paginationStateInitializer = (state, props) => {\n  var _props$paginationMode, _props$initialState, _props$rowCount, _props$initialState2, _ref, _props$paginationMeta, _props$initialState3;\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), (_props$paginationMode = props.paginationModel) !== null && _props$paginationMode !== void 0 ? _props$paginationMode : (_props$initialState = props.initialState) === null || _props$initialState === void 0 || (_props$initialState = _props$initialState.pagination) === null || _props$initialState === void 0 ? void 0 : _props$initialState.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = (_props$rowCount = props.rowCount) !== null && _props$rowCount !== void 0 ? _props$rowCount : (_props$initialState2 = props.initialState) === null || _props$initialState2 === void 0 || (_props$initialState2 = _props$initialState2.pagination) === null || _props$initialState2 === void 0 ? void 0 : _props$initialState2.rowCount;\n  const meta = (_ref = (_props$paginationMeta = props.paginationMeta) !== null && _props$paginationMeta !== void 0 ? _props$paginationMeta : (_props$initialState3 = props.initialState) === null || _props$initialState3 === void 0 || (_props$initialState3 = _props$initialState3.pagination) === null || _props$initialState3 === void 0 ? void 0 : _props$initialState3.meta) !== null && _ref !== void 0 ? _ref : {};\n  return _extends({}, state, {\n    pagination: {\n      paginationModel,\n      rowCount,\n      meta\n    }\n  });\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationMeta(apiRef, props);\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};","map":{"version":3,"names":["_extends","throwIfPageSizeExceedsTheLimit","getDefaultGridPaginationModel","useGridPaginationModel","useGridRowCount","useGridPaginationMeta","paginationStateInitializer","state","props","_props$paginationMode","_props$initialState","_props$rowCount","_props$initialState2","_ref","_props$paginationMeta","_props$initialState3","paginationModel","autoPageSize","initialState","pagination","pageSize","signature","rowCount","meta","paginationMeta","useGridPagination","apiRef"],"sources":["E:/OneDrive - delaPlex/Project/BlueBerry/ChatGpt/21Aug24/Blueberry-bot/frontend/node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from './gridPaginationUtils';\nimport { useGridPaginationModel } from './useGridPaginationModel';\nimport { useGridRowCount } from './useGridRowCount';\nimport { useGridPaginationMeta } from './useGridPaginationMeta';\nexport const paginationStateInitializer = (state, props) => {\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), props.paginationModel ?? props.initialState?.pagination?.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = props.rowCount ?? props.initialState?.pagination?.rowCount;\n  const meta = props.paginationMeta ?? props.initialState?.pagination?.meta ?? {};\n  return _extends({}, state, {\n    pagination: {\n      paginationModel,\n      rowCount,\n      meta\n    }\n  });\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationMeta(apiRef, props);\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,SAASC,8BAA8B,EAAEC,6BAA6B,QAAQ,uBAAuB;AACrG,SAASC,sBAAsB,QAAQ,0BAA0B;AACjE,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,OAAO,MAAMC,0BAA0B,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;EAAA,IAAAC,qBAAA,EAAAC,mBAAA,EAAAC,eAAA,EAAAC,oBAAA,EAAAC,IAAA,EAAAC,qBAAA,EAAAC,oBAAA;EAC1D,MAAMC,eAAe,GAAGhB,QAAQ,CAAC,CAAC,CAAC,EAAEE,6BAA6B,CAACM,KAAK,CAACS,YAAY,CAAC,GAAAR,qBAAA,GAAED,KAAK,CAACQ,eAAe,cAAAP,qBAAA,cAAAA,qBAAA,IAAAC,mBAAA,GAAIF,KAAK,CAACU,YAAY,cAAAR,mBAAA,gBAAAA,mBAAA,GAAlBA,mBAAA,CAAoBS,UAAU,cAAAT,mBAAA,uBAA9BA,mBAAA,CAAgCM,eAAe,CAAC;EACjKf,8BAA8B,CAACe,eAAe,CAACI,QAAQ,EAAEZ,KAAK,CAACa,SAAS,CAAC;EACzE,MAAMC,QAAQ,IAAAX,eAAA,GAAGH,KAAK,CAACc,QAAQ,cAAAX,eAAA,cAAAA,eAAA,IAAAC,oBAAA,GAAIJ,KAAK,CAACU,YAAY,cAAAN,oBAAA,gBAAAA,oBAAA,GAAlBA,oBAAA,CAAoBO,UAAU,cAAAP,oBAAA,uBAA9BA,oBAAA,CAAgCU,QAAQ;EAC3E,MAAMC,IAAI,IAAAV,IAAA,IAAAC,qBAAA,GAAGN,KAAK,CAACgB,cAAc,cAAAV,qBAAA,cAAAA,qBAAA,IAAAC,oBAAA,GAAIP,KAAK,CAACU,YAAY,cAAAH,oBAAA,gBAAAA,oBAAA,GAAlBA,oBAAA,CAAoBI,UAAU,cAAAJ,oBAAA,uBAA9BA,oBAAA,CAAgCQ,IAAI,cAAAV,IAAA,cAAAA,IAAA,GAAI,CAAC,CAAC;EAC/E,OAAOb,QAAQ,CAAC,CAAC,CAAC,EAAEO,KAAK,EAAE;IACzBY,UAAU,EAAE;MACVH,eAAe;MACfM,QAAQ;MACRC;IACF;EACF,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAME,iBAAiB,GAAGA,CAACC,MAAM,EAAElB,KAAK,KAAK;EAClDH,qBAAqB,CAACqB,MAAM,EAAElB,KAAK,CAAC;EACpCL,sBAAsB,CAACuB,MAAM,EAAElB,KAAK,CAAC;EACrCJ,eAAe,CAACsB,MAAM,EAAElB,KAAK,CAAC;AAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}