{"ast":null,"code":"import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  var _ref$current;\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const targetElement = isFunction(ref) ? ref() : (_ref$current = ref === null || ref === void 0 ? void 0 : ref.current) !== null && _ref$current !== void 0 ? _ref$current : null;\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    if (targetElement && eventName && !added) {\n      logger.debug(\"Binding native \".concat(eventName, \" event\"));\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(\"Clearing native \".concat(eventName, \" event\"));\n        targetElement.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [targetElement, wrapHandler, eventName, added, logger, options, apiRef]);\n};","map":{"version":3,"names":["React","isFunction","useGridLogger","useGridNativeEventListener","apiRef","ref","eventName","handler","options","_ref$current","logger","added","setAdded","useState","handlerRef","useRef","targetElement","current","wrapHandler","useCallback","event","useEffect","debug","concat","addEventListener","unsubscribe","removeEventListener","subscribeEvent"],"sources":["E:/OneDrive - delaPlex/Project/BlueBerry/ChatGpt/21Aug24/Blueberry-bot/frontend/node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js"],"sourcesContent":["import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const targetElement = isFunction(ref) ? ref() : ref?.current ?? null;\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        targetElement.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [targetElement, wrapHandler, eventName, added, logger, options, apiRef]);\n};"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAO,MAAMC,0BAA0B,GAAGA,CAACC,MAAM,EAAEC,GAAG,EAAEC,SAAS,EAAEC,OAAO,EAAEC,OAAO,KAAK;EAAA,IAAAC,YAAA;EACtF,MAAMC,MAAM,GAAGR,aAAa,CAACE,MAAM,EAAE,wBAAwB,CAAC;EAC9D,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,KAAK,CAACa,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMC,UAAU,GAAGd,KAAK,CAACe,MAAM,CAACR,OAAO,CAAC;EACxC,MAAMS,aAAa,GAAGf,UAAU,CAACI,GAAG,CAAC,GAAGA,GAAG,CAAC,CAAC,IAAAI,YAAA,GAAGJ,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEY,OAAO,cAAAR,YAAA,cAAAA,YAAA,GAAI,IAAI;EACpE,MAAMS,WAAW,GAAGlB,KAAK,CAACmB,WAAW,CAACC,KAAK,IAAI;IAC7C,OAAON,UAAU,CAACG,OAAO,IAAIH,UAAU,CAACG,OAAO,CAACG,KAAK,CAAC;EACxD,CAAC,EAAE,EAAE,CAAC;EACNpB,KAAK,CAACqB,SAAS,CAAC,MAAM;IACpBP,UAAU,CAACG,OAAO,GAAGV,OAAO;EAC9B,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EACbP,KAAK,CAACqB,SAAS,CAAC,MAAM;IACpB,IAAIL,aAAa,IAAIV,SAAS,IAAI,CAACK,KAAK,EAAE;MACxCD,MAAM,CAACY,KAAK,mBAAAC,MAAA,CAAmBjB,SAAS,WAAQ,CAAC;MACjDU,aAAa,CAACQ,gBAAgB,CAAClB,SAAS,EAAEY,WAAW,EAAEV,OAAO,CAAC;MAC/DI,QAAQ,CAAC,IAAI,CAAC;MACd,MAAMa,WAAW,GAAGA,CAAA,KAAM;QACxBf,MAAM,CAACY,KAAK,oBAAAC,MAAA,CAAoBjB,SAAS,WAAQ,CAAC;QAClDU,aAAa,CAACU,mBAAmB,CAACpB,SAAS,EAAEY,WAAW,EAAEV,OAAO,CAAC;MACpE,CAAC;MACDJ,MAAM,CAACa,OAAO,CAACU,cAAc,CAAC,SAAS,EAAEF,WAAW,CAAC;IACvD;EACF,CAAC,EAAE,CAACT,aAAa,EAAEE,WAAW,EAAEZ,SAAS,EAAEK,KAAK,EAAED,MAAM,EAAEF,OAAO,EAAEJ,MAAM,CAAC,CAAC;AAC7E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}